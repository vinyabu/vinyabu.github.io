<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Windows 下 hexo 博客搭建教程</title>
    <link href="/2024/11/15/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
    <url>/2024/11/15/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="一、环境安装"><a href="#一、环境安装" class="headerlink" title="一、环境安装"></a>一、环境安装</h1><h2 id="1-1-安装-node-js"><a href="#1-1-安装-node-js" class="headerlink" title="1.1 安装 node.js"></a>1.1 安装 node.js</h2><p>推荐安装最新版的hexo，使用最新版的node.js即可</p><p><img src="/img/image-20241115100854478.png" alt="image-20241115100854478"></p><p>详细安装教程：<a href="https://blog.csdn.net/chanyeolchichi/article/details/121348541">https://blog.csdn.net/chanyeolchichi/article/details/121348541</a></p><p>安装完毕后，查看版本：</p><p><img src="/img/1731305715392-14c1362e-26a1-486a-80ca-6d538a665694.png" alt="img"></p><h2 id="1-2-安装-Git"><a href="#1-2-安装-Git" class="headerlink" title="1.2 安装 Git"></a>1.2 安装 Git</h2><p>详细安装教程：<a href="https://blog.csdn.net/2301_76884890/article/details/141158307">https://blog.csdn.net/2301_76884890/article/details/141158307</a></p><p>安装完毕后，查看版本：</p><p><img src="/img/1731305678595-a7e77eff-9cd3-42ca-85a0-da889996333c.png" alt="img"></p><h2 id="1-3-安装-hexo"><a href="#1-3-安装-hexo" class="headerlink" title="1.3 安装 hexo"></a>1.3 安装 hexo</h2><p><strong>以管理员身份运行命令提示符，否则执行以下命令会报错</strong></p><p>1、安装 cnpm</p><p>用npm安装一个淘宝的包管理工具，会快一些</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm i -g cnpm --registry.npm.taobao.org  <span class="hljs-comment"># -g是全局安装</span><br></code></pre></td></tr></table></figure><p><img src="/img/1731305870239-21779e4a-2bf6-4665-a694-63d1bcf0a5a4.png" alt="img"></p><p>2、安装 hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">cnpm install -g hexo-cli<br>hexo -v<br></code></pre></td></tr></table></figure><p><img src="/img/image-20241115103552003.png" alt="image-20241115103552003"></p><h1 id="二、在本地搭建博客进行测试"><a href="#二、在本地搭建博客进行测试" class="headerlink" title="二、在本地搭建博客进行测试"></a>二、在本地搭建博客进行测试</h1><h2 id="2-1-初始化"><a href="#2-1-初始化" class="headerlink" title="2.1 初始化"></a>2.1 初始化</h2><p>找一个目录建立一个空的文件夹，专门用来放博客的静态文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">d:<br><span class="hljs-built_in">mkdir</span> -p hexo_blog/myblog<br><span class="hljs-built_in">cd</span> hexo_blog/myblog<br>hexo init  <span class="hljs-comment"># 初始化</span><br></code></pre></td></tr></table></figure><p><img src="/img/1731559018960-efab9097-ed7f-49a4-ba50-a63bdd690078.png" alt="img"></p><p>初始化之后的的目录：</p><p><img src="/img/1731559034856-fe5871ec-81c2-4ec9-93c2-d56707bbbca2.png" alt="img"></p><h2 id="2-2-本地启动"><a href="#2-2-本地启动" class="headerlink" title="2.2 本地启动"></a>2.2 本地启动</h2><p>1、由于是基于node.js，所以如果在本次启动的话会在本地开启一个web服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo s<br></code></pre></td></tr></table></figure><p>2、可以看到在4000端口启动了一个web服务</p><p><img src="/img/1731472322212-92b18067-d09f-4ff6-a7e8-03a02293f16d.png" alt="img"></p><p>3、浏览器直接访问，显示的是默认为你创建的文章</p><p><img src="/img/1731472322220-c9424628-733f-47de-b89a-c8df721a5d1f.png" alt="img"></p><h1 id="三、配置-Github"><a href="#三、配置-Github" class="headerlink" title="三、配置 Github"></a>三、配置 Github</h1><p>这样我们就可以通过github的地址访问个人博客</p><h2 id="3-1-创建新的github仓库"><a href="#3-1-创建新的github仓库" class="headerlink" title="3.1 创建新的github仓库"></a>3.1 创建新的github仓库</h2><p><strong>仓库名是固定的：必须是<code>你的用户名.github.io</code></strong></p><p><img src="/img/1731472477135-57225786-f424-4a0b-b7b9-5b13e0ea1e7f.png" alt="img"></p><h2 id="3-2-配置-SSH-免密登录（选做）"><a href="#3-2-配置-SSH-免密登录（选做）" class="headerlink" title="3.2 配置 SSH 免密登录（选做）"></a>3.2 配置 SSH 免密登录（选做）</h2><p>使用 ssh key 来解决本地和服务器的连接问题</p><p>1、首先打开电脑文件夹，找到 C:\Users\您的用户名\ .ssh文件夹并删除(如果没有，则直接进入第二步)</p><p>2、在 C:\Users\您的用户名 文件夹下右键打开 Git Bash Here 输入命令: <code>ssh-keygen -t rsa -C &quot;你的github登录邮箱&quot;</code> 生成.ssh秘钥，输入后连敲三次回车，出现下图情况代表成功</p><p><img src="/img/f2dc975f6dcfa54d258e01b00b19bef8.png" alt="image-20230815000353188"></p><p>3、生成了一个新的 C:\Users\您的用户名\ .ssh文件夹，打开这个文件夹，找到 .ssh\id_rsa.pub 文件，记事本打开并复制里面的内容</p><p><img src="/img/image-20241115110439271.png" alt="image-20241115110439271"></p><p>4、打开您的 github 主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key，把复制的内容粘贴进去，title 随便填，保存即可，我们的公钥就添加成功了，设置好如下图:</p><p><img src="/img/3999814473eae52dad06f826b28cf799.png" alt="image-20230815000545361"></p><p><img src="/img/f3e3fd521e08001ed808934515f640f5.png" alt="image-20230815000615104"></p><p><img src="/img/69f95221077b29472dc805624173b552.png" alt="image-20230815000711127"></p><p><img src="/img/ef6fdfe91bcb88dceae346090f55c6b6.png" alt="image-20230815000812045"></p><p>5、检测是否设置成功:</p><p>输入命令: <code>ssh -T git@github.com</code></p><p><img src="/img/7a19546e0b922efefcfd64c17cd41001.png" alt="image-20230815001156227"></p><p>看到以上信息说明 SSH 已配置成功!</p><p>如果出现提示则选择yes知道成功；</p><p>6、此外您还需要如下配置:</p><p>命令: <code>git config --global user.name &quot;您的 Github username&quot;</code> &#x2F;&#x2F; 注意是 username, 而非昵称</p><p>命令: <code>git config --global user.email &quot;xxx@qq.com&quot;</code> &#x2F;&#x2F; 填写您的 github 注册邮箱</p><p>至此，您已经成功配置好了 Github</p><h1 id="四、将博客部署到Github"><a href="#四、将博客部署到Github" class="headerlink" title="四、将博客部署到Github"></a>四、将博客部署到Github</h1><h2 id="4-1-安装-hexo-deployer-git-插件"><a href="#4-1-安装-hexo-deployer-git-插件" class="headerlink" title="4.1 安装 hexo-deployer-git 插件"></a>4.1 安装 hexo-deployer-git 插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">cnpm install --save hexo-deployer-git<br></code></pre></td></tr></table></figure><h2 id="4-2-修改配置文件-config-yml"><a href="#4-2-修改配置文件-config-yml" class="headerlink" title="4.2 修改配置文件_config.yml"></a>4.2 修改配置文件<code>_config.yml</code></h2><p>1、复制github仓库地址</p><p><img src="/img/image-20241115111436777.png" alt="image-20241115111436777"></p><p>2、编辑 <code>D:\hexo_blog\myblog\_config.yml</code>，在最下方找到 Deployment</p><p>修改配置如下(注意：每个冒号后都要有空格，其中的repo就是github仓库地址，若配置了SSH免密登录则使用SSH地址，若未配置使用HTTPS地址）：</p><p><img src="/img/image-20241115111203483.png" alt="image-20241115111203483"></p><h2 id="4-3-一键部署"><a href="#4-3-一键部署" class="headerlink" title="4.3 一键部署"></a>4.3 一键部署</h2><p>1、将本地 blog 推送到 github</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo d<br></code></pre></td></tr></table></figure><p><strong>2、第一次使用Git拉取文件身份认证可能会有问题</strong></p><p><img src="/img/1731314272960-cc2fcbaf-9fdd-4302-b651-70db0db79d2e.png" alt="img"></p><p><strong>解决：</strong><br> 输入如下指令即可通过个人令牌访问自己的仓库：</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">git</span> <span class="hljs-string">remote</span> <span class="hljs-built_in">set-url</span> <span class="hljs-string">origin</span> <span class="hljs-string">https</span>://*@<span class="hljs-string">github</span>.<span class="hljs-string">com</span>/*/*.<span class="hljs-string">git</span>/<br></code></pre></td></tr></table></figure><p>第一个<em>填写你的个人令牌，第二个</em>填写你的账户名称，第三个也就是你的仓库名称。</p><p><strong>3、Git连接失败问题</strong></p><p><img src="/img/1731571262647-0c338135-fb7c-4d62-849b-e8458610518e.png" alt="img"></p><p>解决：关掉代理</p><h2 id="4-4-访问"><a href="#4-4-访问" class="headerlink" title="4.4 访问"></a>4.4 访问</h2><p><a href="https://vinyabu.github.io/">https://vinyabu.github.io/</a></p><p>格式：http:&#x2F;&#x2F;用户名.github.io&#x2F;</p><p><strong>报错404</strong></p><p><img src="/img/1731575973958-441ab29f-a9d0-429f-8c99-b7b464d8565c.png" alt="img"></p><p>解决：</p><p>我之前起的名字中没有github字符，<strong>仓库名必须为【</strong><a href="https://link.zhihu.com/?target=http://your_user_name.github.io"><strong>http://your_user_name.github.io</strong></a><strong>】，固定写法</strong></p><h1 id="五、更换博客主题"><a href="#五、更换博客主题" class="headerlink" title="五、更换博客主题"></a>五、更换博客主题</h1><p>我选用的是Fluid这个主题，<br>体验地址：<a href="https://hexo.fluid-dev.com/">https://hexo.fluid-dev.com/</a><br>github地址：<a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></p><h2 id="5-1-主题下载"><a href="#5-1-主题下载" class="headerlink" title="5.1 主题下载"></a>5.1 主题下载</h2><p>进入到前面的博客目录中将这个主题克隆到themes文件夹下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/fluid-dev/hexo-theme-fluid.git themes/fluid<br></code></pre></td></tr></table></figure><p>我自己试了一下，用git还不如到官网下载压缩包直接解压到themes文件夹中快</p><p><img src="/img/2935791-20230522164701702-888341345.png" alt="img"></p><h2 id="5-2-修改配置"><a href="#5-2-修改配置" class="headerlink" title="5.2 修改配置"></a>5.2 修改配置</h2><p>还是要修改blog目录下的<code>_config.xml</code>文件</p><p>定位到<code>theme</code>, 修改成themes下的主题的文件夹名称（前面我说要写简短点的那个）</p><p><img src="/img/2935791-20230522164948623-29861430.png" alt="img"></p><h2 id="5-3-重新访问"><a href="#5-3-重新访问" class="headerlink" title="5.3 重新访问"></a>5.3 重新访问</h2><p>依次执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean<br>hexo g<br>hexo d<br></code></pre></td></tr></table></figure><p>重新访问一下（如果不行的话用快捷键<strong>Ctrl + Shift + R</strong>刷新一下缓存哦~~）：</p><p><img src="/img/image-20241115115233578.png" alt="image-20241115115233578"></p><h2 id="5-4-Fluid-主题定制"><a href="#5-4-Fluid-主题定制" class="headerlink" title="5.4 Fluid 主题定制"></a>5.4 Fluid 主题定制</h2><p>根据配置指南操作即可：<a href="https://hexo.fluid-dev.com/docs/guide/">https://hexo.fluid-dev.com/docs/guide/</a></p><h1 id="六、编写博客"><a href="#六、编写博客" class="headerlink" title="六、编写博客"></a>六、编写博客</h1><h2 id="6-1-文本编写"><a href="#6-1-文本编写" class="headerlink" title="6.1 文本编写"></a>6.1 文本编写</h2><p>1、在 D:\hexo_blog\myblog 目录下，通过输入命令: <code>hexo new &quot;文章 title&quot;</code> 会在 &#x2F;source 文件夹下生成对应文章的 .md 文件</p><p>2、通过 Typora 打开此文件编写文章并保存</p><h2 id="6-2-插入图片"><a href="#6-2-插入图片" class="headerlink" title="6.2 插入图片"></a>6.2 插入图片</h2><p>1、Typora 中进行图像设置，该md文件同路径下会自动生成一个img目录，插入的图片自动保存到该img目录中</p><p><img src="/img/image-20241115120656752.png" alt="image-20241115120656752"></p><p><img src="/img/image-20241115120456351.png" alt="image-20241115120456351"></p><p>2、将img目录中的图片全部复制到 D:\hexo_blog\myblog\source\img 目录下统一保存，这样文章内容页就可以显示图片了</p><p><img src="/img/image-20241115121141953.png" alt="image-20241115121141953"></p><h2 id="6-3-重新访问"><a href="#6-3-重新访问" class="headerlink" title="6.3 重新访问"></a>6.3 重新访问</h2><p>参考5.3节</p><blockquote><p>参考资料：</p><p><a href="https://www.cnblogs.com/junlin623/p/17410016.html">https://www.cnblogs.com/junlin623/p/17410016.html</a></p><p><a href="https://blog.csdn.net/m0_68021330/article/details/132299299">https://blog.csdn.net/m0_68021330/article/details/132299299</a></p><p><a href="https://baizhouhaoyue.github.io/2023/08/14/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%92%8C%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B-Windows/">https://baizhouhaoyue.github.io/2023/08/14/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%92%8C%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B-Windows/</a></p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux 扩展磁盘空间</title>
    <link href="/2024/11/14/Linux-%E6%89%A9%E5%B1%95%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4/"/>
    <url>/2024/11/14/Linux-%E6%89%A9%E5%B1%95%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/xiykj/p/18088424#top">https://www.cnblogs.com/xiykj/p/18088424#top</a></p><ol><li><strong>使用lsblk查看新硬盘是否被系统识别</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">lsblk</span><br>sdc      8:32   0    20G  0 disk<br></code></pre></td></tr></table></figure><ol start="2"><li><strong>对新添加的硬盘进行分区</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">fdisk /dev/sdc</span><br></code></pre></td></tr></table></figure><p><img src="/img/2034475-20240321221519897-1589389643.png" alt="img"></p><ol start="3"><li><strong>检查分区</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">lsblk</span><br>sdc      8:32   0    20G  0 disk <br>└─sdc1   8:33   0    20G  0 part <br></code></pre></td></tr></table></figure><ol start="4"><li>**对新分区进行格式化 ** mkfs.ext4 &#x2F;dev&#x2F;sdc1</li></ol><p>​查看之前根目录分区的格式 ext4</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">df</span> -Th</span><br>Filesystem     Type      Size  Used Avail Use% Mounted on<br>udev           devtmpfs  1.9G     0  1.9G   0% /dev<br>tmpfs          tmpfs     391M  1.6M  389M   1% /run<br>/dev/sda5      ext4       20G   19G     0 100% /<br></code></pre></td></tr></table></figure><p>​分区</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">mkfs.ext4 /dev/sdc1</span><br>mke2fs 1.45.5 (07-Jan-2020)<br>Creating filesystem with 5242624 4k blocks and 1310720 inodes<br>Filesystem UUID: 3a27f3e3-303f-4dfc-a4d9-d63e35248e88<br>Superblock backups stored on blocks: <br>32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, <br>4096000<br><br>Allocating group tables: done                            <br>Writing inode tables: done                            <br>Creating journal (32768 blocks): done<br>Writing superblocks and filesystem accounting information: done <br></code></pre></td></tr></table></figure><ol start="5"><li><strong>将硬盘分区初始化为物理卷</strong></li></ol><p>​安装lvm2</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt install lvm2<br></code></pre></td></tr></table></figure><p>​初始化</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">pvcreate /dev/sdc1</span><br>WARNING: ext4 signature detected on /dev/sdc1 at offset 1080. Wipe it? [y/n]: y<br>  Wiping ext4 signature on /dev/sdc1.<br>  Physical volume &quot;/dev/sdc1&quot; successfully created.<br></code></pre></td></tr></table></figure><p>​查看物理卷</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">pvdisplay</span><br>  &quot;/dev/sdc1&quot; is a new physical volume of &quot;&lt;20.00 GiB&quot;<br>  --- NEW Physical volume ---<br>  PV Name               /dev/sdc1<br>  VG Name               <br>  PV Size               &lt;20.00 GiB<br>  Allocatable           NO<br>  PE Size               0   <br>  Total PE              0<br>  Free PE               0<br>  Allocated PE          0<br>  PV UUID               Vk83nG-Bv8F-ifqk-pNd7-wMD3-h4Tj-U5ZJjZ<br></code></pre></td></tr></table></figure><ol start="6"><li><strong>将物理卷添加到根目录所在卷组</strong></li></ol><p>由于根目录不是物理卷，所以无法添加</p><ol start="7"><li><strong>挂载磁盘</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">mkdir</span> /data</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">mount /dev/sdc1 /data</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">vim /etc/fstab</span><br>/dev/sdc1       /data           ext4    defaults        0       0<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/11/14/hello-world/"/>
    <url>/2024/11/14/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
